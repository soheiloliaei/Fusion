[project]
name = "fusion-os"
version = "15.0.0"
description = "AI Agentic Operating System with 32 specialized agents, memory, telemetry, and real-time GUI"
authors = [
    { name = "Fusion Team", email = "fusion@yourdomain.com" }
]
readme = "FUSION_V15_README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
keywords = ["ai", "agents", "orchestration", "memory", "telemetry", "gui"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    "streamlit>=1.25.0",
    "requests>=2.28.0",
    "pydantic>=2.0.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
gui = [
    "streamlit>=1.25.0",
    "plotly>=5.15.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
]
api = [
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    "pydantic>=2.0.0",
]

[project.urls]
"Homepage" = "https://github.com/yourorg/fusion"
"Documentation" = "https://yourdomain.com/fusion/docs"
"Repository" = "https://github.com/yourorg/fusion"
"Issue Tracker" = "https://github.com/yourorg/fusion/issues"
"Changelog" = "https://github.com/yourorg/fusion/blob/main/CHANGELOG.md"

[project.scripts]
fusion = "fusion:main"
fusion-api = "fusion_api:main"
fusion-gui = "web_app:main"

[tool.setuptools]
packages = [
    "fusion_core",
    "fusion_core.memory",
    "fusion_core.telemetry", 
    "fusion_core.orchestration",
    "agents",
]
include-package-data = true

[tool.setuptools.package-data]
"fusion_core" = ["*.json", "*.yaml", "*.yml"]
"agents" = ["*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["fusion_core", "agents"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["fusion_core", "agents"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 